// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qLP7ErC94TEE4dz5dv2X5Z
// Component: qnEniRyJ9Hk6

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: 66MC2d9B7YecVEphuUMtqF/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qLP7ErC94TEE4dz5dv2X5Z/projectcss
import sty from "./PlasmicDropIcon.module.css"; // plasmic-import: qnEniRyJ9Hk6/css

createPlasmicElementProxy;

export type PlasmicDropIcon__VariantMembers = {};
export type PlasmicDropIcon__VariantsArgs = {};
type VariantPropType = keyof PlasmicDropIcon__VariantsArgs;
export const PlasmicDropIcon__VariantProps = new Array<VariantPropType>();

export type PlasmicDropIcon__ArgsType = {};
type ArgPropType = keyof PlasmicDropIcon__ArgsType;
export const PlasmicDropIcon__ArgProps = new Array<ArgPropType>();

export type PlasmicDropIcon__OverridesType = {
  root?: Flex__<typeof PlasmicImg__>;
};

export interface DefaultDropIconProps {
  className?: string;
}

const $$ = {};

function PlasmicDropIcon__RenderFunc(props: {
  variants: PlasmicDropIcon__VariantsArgs;
  args: PlasmicDropIcon__ArgsType;
  overrides: PlasmicDropIcon__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <PlasmicImg__
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      alt={""}
      className={classNames(
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_css.plasmic_tokens,
        sty.root
      )}
      displayHeight={"auto"}
      displayMaxHeight={"none"}
      displayMaxWidth={"100%"}
      displayMinHeight={"0"}
      displayMinWidth={"0"}
      displayWidth={"auto"}
      height={"13px"}
      loading={"lazy"}
      src={
        "https://s3-alpha-sig.figma.com/img/d0c4/ee53/c47056db6cc7fc22e11023a90f3439cf?Expires=1745193600&Key-Pair-Id=APKAQ4GOSFWCW27IBOMQ&Signature=oC01QHwtWpZN-6yzX9zcAnP7FHHBMb~uaNcxs2rVBRYYPEtf22PeWmxJfSVr~59-BmKTQz0yQ0~eCJFSL14IHExoG0SvHTvgLkPE4hVzfmAgusAFwc9dMj7hQGJAz4iFwv1f-UsiI5XDozCOAc0JYZWOdYVJSsUYhTeOeMMZLI6HYBKqA88A2Nr~MNtSUGQJROoyJA6e-F0qBqDJYtMNElPYTI-Xbv6rFsi1XzCCvss4~fGt74eUqu37~xVPi3sqFhzWR~oL3cJ2rrGE7bcO1ElZIgTdWfnCWbZKcM1w4-0~qVnkHOIJ49Dmru0S3I1SYRTnpv2lXR3EF2ud0G3R7g__"
      }
      width={"13px"}
    />
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: typeof PlasmicImg__;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDropIcon__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDropIcon__VariantsArgs;
    args?: PlasmicDropIcon__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicDropIcon__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicDropIcon__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicDropIcon__ArgProps,
          internalVariantPropNames: PlasmicDropIcon__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicDropIcon__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDropIcon";
  } else {
    func.displayName = `PlasmicDropIcon.${nodeName}`;
  }
  return func;
}

export const PlasmicDropIcon = Object.assign(
  // Top-level PlasmicDropIcon renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicDropIcon
    internalVariantProps: PlasmicDropIcon__VariantProps,
    internalArgProps: PlasmicDropIcon__ArgProps
  }
);

export default PlasmicDropIcon;
/* prettier-ignore-end */
